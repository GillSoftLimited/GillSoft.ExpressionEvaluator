//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ..\Grammar\Expression.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace GillSoft.ExpressionEvaluator {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class ExpressionLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, SINGLE_QUOTED_STRING=2, DOUBLE_QUOTED_STRING=3, CONST=4, INTEGER=5, 
		DECIMAL=6, TRUE=7, FALSE=8, IDENT=9, LPAREN=10, RPAREN=11, MULT=12, DIV=13, 
		PLUS=14, MINUS=15, POW=16, AND=17, OR=18, NOT=19, WS=20;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "SINGLE_QUOTED_STRING", "DOUBLE_QUOTED_STRING", "CONST", "INTEGER", 
		"DECIMAL", "TRUE", "FALSE", "IDENT", "LPAREN", "RPAREN", "MULT", "DIV", 
		"PLUS", "MINUS", "POW", "AND", "OR", "NOT", "WS"
	};


	public ExpressionLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ExpressionLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", null, null, null, null, null, null, null, null, "'('", "')'", 
		"'*'", "'/'", "'+'", "'-'", "'^'", "'&&'", "'||'", "'!'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, "SINGLE_QUOTED_STRING", "DOUBLE_QUOTED_STRING", "CONST", "INTEGER", 
		"DECIMAL", "TRUE", "FALSE", "IDENT", "LPAREN", "RPAREN", "MULT", "DIV", 
		"PLUS", "MINUS", "POW", "AND", "OR", "NOT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Expression.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ExpressionLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x16', '\x82', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\a', '\x3', '\x30', 
		'\n', '\x3', '\f', '\x3', '\xE', '\x3', '\x33', '\v', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\a', '\x4', '\x39', '\n', '\x4', 
		'\f', '\x4', '\xE', '\x4', '<', '\v', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x5', '\x3', '\x5', '\x5', '\x5', '\x42', '\n', '\x5', '\x3', 
		'\x6', '\x6', '\x6', '\x45', '\n', '\x6', '\r', '\x6', '\xE', '\x6', '\x46', 
		'\x3', '\a', '\x6', '\a', 'J', '\n', '\a', '\r', '\a', '\xE', '\a', 'K', 
		'\x3', '\a', '\x3', '\a', '\x6', '\a', 'P', '\n', '\a', '\r', '\a', '\xE', 
		'\a', 'Q', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\a', '\n', '\x61', '\n', '\n', 
		'\f', '\n', '\xE', '\n', '\x64', '\v', '\n', '\x3', '\v', '\x3', '\v', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', 
		'\x15', '\x6', '\x15', '}', '\n', '\x15', '\r', '\x15', '\xE', '\x15', 
		'~', '\x3', '\x15', '\x3', '\x15', '\x2', '\x2', '\x16', '\x3', '\x3', 
		'\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', 
		'\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', 
		'\x13', '%', '\x14', '\'', '\x15', ')', '\x16', '\x3', '\x2', '\x10', 
		'\x5', '\x2', '\f', '\f', '\xF', '\xF', ')', ')', '\x5', '\x2', '\f', 
		'\f', '\xF', '\xF', '$', '$', '\x3', '\x2', '\x32', ';', '\x4', '\x2', 
		'V', 'V', 'v', 'v', '\x4', '\x2', 'T', 'T', 't', 't', '\x4', '\x2', 'W', 
		'W', 'w', 'w', '\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', '\x2', 'H', 'H', 
		'h', 'h', '\x4', '\x2', '\x43', '\x43', '\x63', '\x63', '\x4', '\x2', 
		'N', 'N', 'n', 'n', '\x4', '\x2', 'U', 'U', 'u', 'u', '\x6', '\x2', '%', 
		'%', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\b', '\x2', '%', '%', 
		'\x30', '\x30', '\x32', ';', '\x43', '\\', '\x61', '\x61', '\x63', '|', 
		'\x5', '\x2', '\v', '\f', '\xE', '\xF', '\"', '\"', '\x2', '\x89', '\x2', 
		'\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '+', '\x3', '\x2', '\x2', '\x2', '\x5', 
		'-', '\x3', '\x2', '\x2', '\x2', '\a', '\x36', '\x3', '\x2', '\x2', '\x2', 
		'\t', '\x41', '\x3', '\x2', '\x2', '\x2', '\v', '\x44', '\x3', '\x2', 
		'\x2', '\x2', '\r', 'I', '\x3', '\x2', '\x2', '\x2', '\xF', 'S', '\x3', 
		'\x2', '\x2', '\x2', '\x11', 'X', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'^', '\x3', '\x2', '\x2', '\x2', '\x15', '\x65', '\x3', '\x2', '\x2', 
		'\x2', '\x17', 'g', '\x3', '\x2', '\x2', '\x2', '\x19', 'i', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', 'k', '\x3', '\x2', '\x2', '\x2', '\x1D', 'm', '\x3', 
		'\x2', '\x2', '\x2', '\x1F', 'o', '\x3', '\x2', '\x2', '\x2', '!', 'q', 
		'\x3', '\x2', '\x2', '\x2', '#', 's', '\x3', '\x2', '\x2', '\x2', '%', 
		'v', '\x3', '\x2', '\x2', '\x2', '\'', 'y', '\x3', '\x2', '\x2', '\x2', 
		')', '|', '\x3', '\x2', '\x2', '\x2', '+', ',', '\a', '.', '\x2', '\x2', 
		',', '\x4', '\x3', '\x2', '\x2', '\x2', '-', '\x31', '\a', ')', '\x2', 
		'\x2', '.', '\x30', '\n', '\x2', '\x2', '\x2', '/', '.', '\x3', '\x2', 
		'\x2', '\x2', '\x30', '\x33', '\x3', '\x2', '\x2', '\x2', '\x31', '/', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\x32', '\x3', '\x2', '\x2', '\x2', 
		'\x32', '\x34', '\x3', '\x2', '\x2', '\x2', '\x33', '\x31', '\x3', '\x2', 
		'\x2', '\x2', '\x34', '\x35', '\a', ')', '\x2', '\x2', '\x35', '\x6', 
		'\x3', '\x2', '\x2', '\x2', '\x36', ':', '\a', '$', '\x2', '\x2', '\x37', 
		'\x39', '\n', '\x3', '\x2', '\x2', '\x38', '\x37', '\x3', '\x2', '\x2', 
		'\x2', '\x39', '<', '\x3', '\x2', '\x2', '\x2', ':', '\x38', '\x3', '\x2', 
		'\x2', '\x2', ':', ';', '\x3', '\x2', '\x2', '\x2', ';', '=', '\x3', '\x2', 
		'\x2', '\x2', '<', ':', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', '$', 
		'\x2', '\x2', '>', '\b', '\x3', '\x2', '\x2', '\x2', '?', '\x42', '\x5', 
		'\v', '\x6', '\x2', '@', '\x42', '\x5', '\r', '\a', '\x2', '\x41', '?', 
		'\x3', '\x2', '\x2', '\x2', '\x41', '@', '\x3', '\x2', '\x2', '\x2', '\x42', 
		'\n', '\x3', '\x2', '\x2', '\x2', '\x43', '\x45', '\t', '\x4', '\x2', 
		'\x2', '\x44', '\x43', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\x3', 
		'\x2', '\x2', '\x2', '\x46', '\x44', '\x3', '\x2', '\x2', '\x2', '\x46', 
		'G', '\x3', '\x2', '\x2', '\x2', 'G', '\f', '\x3', '\x2', '\x2', '\x2', 
		'H', 'J', '\t', '\x4', '\x2', '\x2', 'I', 'H', '\x3', '\x2', '\x2', '\x2', 
		'J', 'K', '\x3', '\x2', '\x2', '\x2', 'K', 'I', '\x3', '\x2', '\x2', '\x2', 
		'K', 'L', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\x3', '\x2', '\x2', '\x2', 
		'M', 'O', '\a', '\x30', '\x2', '\x2', 'N', 'P', '\t', '\x4', '\x2', '\x2', 
		'O', 'N', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'O', '\x3', '\x2', '\x2', '\x2', 'Q', 'R', '\x3', '\x2', '\x2', '\x2', 
		'R', '\xE', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\t', '\x5', '\x2', 
		'\x2', 'T', 'U', '\t', '\x6', '\x2', '\x2', 'U', 'V', '\t', '\a', '\x2', 
		'\x2', 'V', 'W', '\t', '\b', '\x2', '\x2', 'W', '\x10', '\x3', '\x2', 
		'\x2', '\x2', 'X', 'Y', '\t', '\t', '\x2', '\x2', 'Y', 'Z', '\t', '\n', 
		'\x2', '\x2', 'Z', '[', '\t', '\v', '\x2', '\x2', '[', '\\', '\t', '\f', 
		'\x2', '\x2', '\\', ']', '\t', '\b', '\x2', '\x2', ']', '\x12', '\x3', 
		'\x2', '\x2', '\x2', '^', '\x62', '\t', '\r', '\x2', '\x2', '_', '\x61', 
		'\t', '\xE', '\x2', '\x2', '`', '_', '\x3', '\x2', '\x2', '\x2', '\x61', 
		'\x64', '\x3', '\x2', '\x2', '\x2', '\x62', '`', '\x3', '\x2', '\x2', 
		'\x2', '\x62', '\x63', '\x3', '\x2', '\x2', '\x2', '\x63', '\x14', '\x3', 
		'\x2', '\x2', '\x2', '\x64', '\x62', '\x3', '\x2', '\x2', '\x2', '\x65', 
		'\x66', '\a', '*', '\x2', '\x2', '\x66', '\x16', '\x3', '\x2', '\x2', 
		'\x2', 'g', 'h', '\a', '+', '\x2', '\x2', 'h', '\x18', '\x3', '\x2', '\x2', 
		'\x2', 'i', 'j', '\a', ',', '\x2', '\x2', 'j', '\x1A', '\x3', '\x2', '\x2', 
		'\x2', 'k', 'l', '\a', '\x31', '\x2', '\x2', 'l', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', 'm', 'n', '\a', '-', '\x2', '\x2', 'n', '\x1E', '\x3', '\x2', 
		'\x2', '\x2', 'o', 'p', '\a', '/', '\x2', '\x2', 'p', ' ', '\x3', '\x2', 
		'\x2', '\x2', 'q', 'r', '\a', '`', '\x2', '\x2', 'r', '\"', '\x3', '\x2', 
		'\x2', '\x2', 's', 't', '\a', '(', '\x2', '\x2', 't', 'u', '\a', '(', 
		'\x2', '\x2', 'u', '$', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\a', '~', 
		'\x2', '\x2', 'w', 'x', '\a', '~', '\x2', '\x2', 'x', '&', '\x3', '\x2', 
		'\x2', '\x2', 'y', 'z', '\a', '#', '\x2', '\x2', 'z', '(', '\x3', '\x2', 
		'\x2', '\x2', '{', '}', '\t', '\xF', '\x2', '\x2', '|', '{', '\x3', '\x2', 
		'\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', '\x2', '~', '|', '\x3', '\x2', 
		'\x2', '\x2', '~', '\x7F', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', 
		'\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\b', '\x15', '\x2', '\x2', 
		'\x81', '*', '\x3', '\x2', '\x2', '\x2', '\v', '\x2', '\x31', ':', '\x41', 
		'\x46', 'K', 'Q', '\x62', '~', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace GillSoft.ExpressionEvaluator
